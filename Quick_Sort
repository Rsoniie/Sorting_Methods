***************SORTING ALGO********TC=O(NLOGN) ****** SC = O(N)*****FOR WORST CASE = TC = O(N^2)*******
#include <bits/stdc++.h>
int partition(vector<int>&arr, int s, int e)
{
    int pivot = arr[s];
    int cnt = 0;
    for(int i=s+1;i<=e;i++)
    {
        if(arr[i] <= pivot)
        {
            cnt++;
        }
    }

    int pivotIndex = s+cnt;
    swap(arr[s], arr[pivotIndex]);
    int i = s;
    int j = e;
    while(i < pivotIndex && j > pivotIndex)
    {
        while(arr[i] <= arr[pivotIndex])
        {
            i++;
        }
        while(arr[j] > arr[pivotIndex])
        {
            j--;
        }

        if( i < pivotIndex && j > pivotIndex)
        {
            swap(arr[i++], arr[j--]);
        }

        
    }

    return pivotIndex;
} 
void quick(vector<int>&arr, int s, int e)
{
    if(s >= e)
    {
        return ;
    }

    int p = partition(arr, s, e);
    quick(arr, s, p-1);
    quick(arr, p+1, e);
}
vector<int> quickSort(vector<int> arr)
{
   // vector<int> ans;
    //ans = arr;
    int n = arr.size();
    quick(arr, 0, n-1);
    return arr;
}

